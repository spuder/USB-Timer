esp8266:
  board: d1_mini

switch:
  - platform: gpio
    pin: D5
    name: "USB 1"
    id: "usb_1"
  - platform: gpio
    pin: D6
    name: "USB 2"
    id: "usb_2"

# Status LED light is on Pin D4
# Pin D4 is shared with the wifi reset button on the USB-Timer PCB
# You can choose to use 1 or the other
light: 
  - platform: status_led
    name: "USB-Timer State"
    pin: 
      number: D4
      inverted: true

# The time section will setup the USB-Timer to be completely stand alone mode.
# It will turn on/off the usb ports at the configured times
# See home-assistant.yaml for example configuration that leverages home assistant 'automations' and 'scenes' for additional automation

time: 
  # sntp defaults to pool.ntp.org. See home-assistant.yaml for example to pull time from homeassistant instead
  - platform: sntp
    # ESPHome will try to automatically infer the timezone based on the computer that is running esphome
    # https://esphome.io/components/time.html#home-assistant-time-source
    # timezone: America/Denver 
    on_time:
      - seconds: 0
        minutes: 0
        hours: 8
        days_of_week: MON-FRI
        then:
          - switch.turn_on: usb_1
          - switch.turn_on: usb_2
      - seconds: 0
        minutes: 0
        hours: 17
        days_of_week: MON-FRI
        then:
          - switch.turn_off: usb_1
          - switch.turn_off: usb_2

binary_sensor:
  - platform: gpio
    pin: 
      number: D0
      mode: INPUT_PULLUP
      inverted: True
    name: "usb_1_button"
    id: "usb_1_button"
    on_press:
      then:
        - switch.toggle: usb_1
  - platform: gpio
    pin: 
      number: D1
      mode: INPUT_PULLUP
      inverted: True
    name: "usb_2_button"
    id: "usb_2_button"
    on_press:
      then:
        - switch.toggle: usb_2