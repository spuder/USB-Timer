esp8266:
  board: d1_mini

# USB Ports are connected to GPIO pins through Logic Level Mosfets
# D8 = USB 1
# D7 = USB 2
# D6 = USB 3
# D5 = USB 4
switch:
  - platform: gpio
    pin: D8
    name: "USB 1"
    id: "usb_1"
  - platform: gpio
    pin: D7
    name: "USB 2"
    id: "usb_2"
  - platform: gpio
    pin: D6
    name: "USB 3"
    id: "usb_3"
  - platform: gpio
    pin: D5
    name: "USB 4"
    id: "usb_4"


# The time section will setup the USB-Timer to be completely stand alone mode.
# It will turn on/off the usb ports at the configured times
# See home-assistant.yaml for example configuration that leverages home assistant 'automations' and 'scenes' for additional automation

time: 
  # sntp defaults to pool.ntp.org. See home-assistant.yaml for example to pull time from homeassistant instead
  - platform: sntp
    # ESPHome will try to automatically infer the timezone based on the computer that is running esphome
    # https://esphome.io/components/time.html#home-assistant-time-source
    # timezone: America/Denver x
    on_time:
      - seconds: 0
        minutes: 0
        hours: 8
        days_of_week: MON-FRI
        then:
          - switch.turn_on: usb_1
          - switch.turn_on: usb_2
          - switch.turn_on: usb_3
          - switch.turn_on: usb_4
      - seconds: 0
        minutes: 0
        hours: 17
        days_of_week: MON-FRI
        then:
          - switch.turn_off: usb_1
          - switch.turn_off: usb_2
          - switch.turn_off: usb_3
          - switch.turn_off: usb_4

  
# USB Ports are connected to GPIO pins through Logic Level Mosfets
# D8 = USB 1
# D7 = USB 2
# D6 = USB 3
# D5 = USB 4
switch:
  - platform: gpio
    pin: D8
    name: "USB 1"
    id: "usb_1"
  - platform: gpio
    pin: D7
    name: "USB 2"
    id: "usb_2"
  - platform: gpio
    pin: D6
    name: "USB 3"
    id: "usb_3"
  - platform: gpio
    pin: D5
    name: "USB 4"
    id: "usb_4"


# The time section will setup the USB-Timer to be completely stand alone mode.
# It will turn on/off the usb ports at the configured times
# See home-assistant.yaml for example configuration that leverages home assistant 'automations' and 'scenes' for additional automation

time: 
  # sntp defaults to pool.ntp.org. See home-assistant.yaml for example to pull time from homeassistant instead
  - platform: sntp
    # ESPHome will try to automatically infer the timezone based on the computer that is running esphome
    # https://esphome.io/components/time.html#home-assistant-time-source
    # timezone: America/Denver x
    on_time:
      - seconds: 0
        minutes: 0
        hours: 8
        days_of_week: MON-FRI
        then:
          - switch.turn_on: usb_1
          - switch.turn_on: usb_2
          - switch.turn_on: usb_3
          - switch.turn_on: usb_4
      - seconds: 0
        minutes: 0
        hours: 17
        days_of_week: MON-FRI
        then:
          - switch.turn_off: usb_1
          - switch.turn_off: usb_2
          - switch.turn_off: usb_3
          - switch.turn_off: usb_4

# Optional momentary push buttons to toggle the USB ports on and off
# D0 = USB 1 Button
# D1 = USB 2 Button
# D2 = USB 3 Button
# D3 = USB 4 Button
# If you wish to use on/off buttons instead of momentary buttons, change switch.toggle to switch.turn_on
binary_sensor:
  - platform: gpio
    pin: 
      number: D1
      mode: INPUT_PULLUP
      inverted: True
    name: "usb_1_button"
    id: "usb_1_button"
    on_press:
      then:
        - switch.toggle: usb_1
  - platform: gpio
    pin: 
      number: D2
      mode: INPUT_PULLUP
      inverted: True
    name: "usb_2_button"
    id: "usb_2_button"
    on_press:
      then:
        - switch.toggle: usb_2
  - platform: gpio
    pin: 
      number: D3
      mode: INPUT_PULLUP
      inverted: True
    name: "usb_3_button"
    id: "usb_3_button"
    on_press:
      then:
        - switch.toggle: usb_3
  - platform: gpio
    pin: 
      number: D4
      mode: INPUT_PULLUP
      inverted: True
    name: "usb_4_button"
    id: "usb_4_button"
    on_press:
      then:
        - switch.toggle: usb_4